import {
  FETCH_MOTOS_START,
  FETCH_MOTOS_SUCCESS,
  FETCH_MOTOS_FAILURE,
  LOAD_MORE_MOTOS_START,
  LOAD_MORE_MOTOS_SUCCESS,
  LOAD_MORE_MOTOS_FAILURE,
  FETCH_MOTO_BY_ID_START,
  FETCH_MOTO_BY_ID_SUCCESS,
  FETCH_MOTO_BY_ID_FAILURE,
  ADD_MOTO_TO_BASKET,
  SEARCH_MOTO,
  FETCH_CATEGORIES_START,
  FETCH_CATEGORIES_SUCCESS,
  FETCH_CATEGORIES_FAILURE,
  REMOVE_MOTO_FROM_BASKET,
  CLEAN_BASKET
} from 'actionTypes'
import {getRenderedMotosLength} from 'selectors'
import {
  fetchMotos as fetchMotosApi,
  loadMoreMotos as loadMoreMotosApi,
  fetchMotoById as fetchMotoByIdApi,
  fetchCategories as fetchCategoriesApi,
} from 'api'

export const fetchMotos = () => async dispatch => {
  dispatch({type: FETCH_MOTOS_START})

  try {
    const motos = await fetchMotosApi()
    dispatch({
      type: FETCH_MOTOS_SUCCESS,
      payload: motos
    })
  } catch (err) {
    dispatch({
      type: FETCH_MOTOS_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const loadMoreMotos = () => async (dispatch, getState) => {
  const offset = getRenderedMotosLength(getState())

  dispatch({type: LOAD_MORE_MOTOS_START})

  try {
    const motos = await loadMoreMotosApi({offset})
    dispatch({
      type: LOAD_MORE_MOTOS_SUCCESS,
      payload: motos
    })
  } catch (err) {
    dispatch({
      type: LOAD_MORE_MOTOS_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const fetchMotoById = (id) => async dispatch => {
  dispatch({type: FETCH_MOTO_BY_ID_START})

  try {
    const moto = await fetchMotoByIdApi(id)
    dispatch({
      type: FETCH_MOTO_BY_ID_SUCCESS,
      payload: moto
    })
  } catch (err) {
    dispatch({
      type: FETCH_MOTO_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const addMotoToBasket = id => dispatch => {
  dispatch({
    type: ADD_MOTO_TO_BASKET,
    payload: id
  })
}

export const searchMoto = (text) => dispatch => {
  dispatch({
    type: SEARCH_MOTO,
    payload: text
  })
}

export const fetchCategories = () => async dispatch => {
  dispatch({type: FETCH_CATEGORIES_START})

  try {
    const motos = await fetchCategoriesApi()
    dispatch({
      type: FETCH_CATEGORIES_SUCCESS,
      payload: motos
    })
  } catch (err) {
    dispatch({
      type: FETCH_CATEGORIES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const removeMotoFromBasket = id => async dispatch => {
  dispatch({
    type: REMOVE_MOTO_FROM_BASKET,
    payload: id
  })
}

export const cleanBasket = () => dispatch => {
  dispatch({
    type: CLEAN_BASKET
  })
}


export const basketCheckout = motos => () => {
  alert(JSON.stringify(motos))
}